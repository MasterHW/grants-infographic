
  import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import { useAccount, useConnect, useEnsName } from 'wagmi';
import { getContract, readContract } from '@wagmi/core';
import { useContractWrite, usePrepareContractWrite } from "wagmi";
import { useEffect, useState } from 'react';
import { BrowserRouter, Routes, Route, useLocation } from "react-router-dom";
import { useRouter } from 'next/router';


const EditRound: NextPage = () => {
  const { address, isConnected } = useAccount();
  const { data: ensName } = useEnsName({ address });
  const [isPageLoading, setIsPageLoading] = useState(true);
  const [pageError, setPageError] = useState({value: false, message: ""});

  const router = useRouter();
  const id = router.query.grantId as string;





  return (
    <div>
        <h1 className="text-3xl font-bold underline">
          Edit round info
      </h1>
      { isPageLoading ? (
        <p>Loading...</p>
      ) : !id ? (
        <p>add a grantId into the url: /edit/:grantId </p>
      ) : pageError.value ? (
        <p>Error: {pageError.message} </p>
      ) : ( 
        <div>
         
        </div>
      )}
      </div>

    // <div className={styles.container}>
    //   <Head>
    //     <title>RainbowKit App</title>
    //     <meta
    //       content="Generated by @rainbow-me/create-rainbowkit"
    //       name="description"
    //     />
    //     <link href="/favicon.ico" rel="icon" />
    //   </Head>

    //   <main className={styles.main}>
    //     <ConnectButton />

    //     <h1 className={styles.title}>
    //       Welcome to <a href="">RainbowKit</a> + <a href="">wagmi</a> +{' '}
    //       <a href="https://nextjs.org">Next.js!</a>
    //     </h1>

    //     <p className={styles.description}>
    //       Get started by editing{' '}
    //       <code className={styles.code}>pages/index.tsx</code>
    //     </p>

    //     <div className={styles.grid}>
    //       <a className={styles.card} href="https://rainbowkit.com">
    //         <h2>RainbowKit Documentation &rarr;</h2>
    //         <p>Learn how to customize your wallet connection flow.</p>
    //       </a>

    //       <a className={styles.card} href="https://wagmi.sh">
    //         <h2>wagmi Documentation &rarr;</h2>
    //         <p>Learn how to interact with Ethereum.</p>
    //       </a>

    //       <a
    //         className={styles.card}
    //         href="https://github.com/rainbow-me/rainbowkit/tree/main/examples"
    //       >
    //         <h2>RainbowKit Examples &rarr;</h2>
    //         <p>Discover boilerplate example RainbowKit projects.</p>
    //       </a>

    //       <a className={styles.card} href="https://nextjs.org/docs">
    //         <h2>Next.js Documentation &rarr;</h2>
    //         <p>Find in-depth information about Next.js features and API.</p>
    //       </a>

    //       <a
    //         className={styles.card}
    //         href="https://github.com/vercel/next.js/tree/canary/examples"
    //       >
    //         <h2>Next.js Examples &rarr;</h2>
    //         <p>Discover and deploy boilerplate example Next.js projects.</p>
    //       </a>

    //       <a
    //         className={styles.card}
    //         href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
    //       >
    //         <h2>Deploy &rarr;</h2>
    //         <p>
    //           Instantly deploy your Next.js site to a public URL with Vercel.
    //         </p>
    //       </a>
    //     </div>
    //   </main>

    //   <footer className={styles.footer}>
    //     <a href="https://rainbow.me" rel="noopener noreferrer" target="_blank">
    //       Made with ‚ù§Ô∏è by your frens at üåà
    //     </a>
    //   </footer>
    // </div>
  );
};

export default EditRound;
